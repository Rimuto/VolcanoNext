@page
@model Volcano.Pages.GoogleMapModel
@{
    ViewData["Title"] = "Google Map";
}
<html>
<head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
        /* Always set the map height explicitly to define the size of the div
            * element that contains the map. */
        #map {
            width: 700px;
            height: 500px;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <!--Здесь я попробую написать скрипт AJAX чтобы он брал инфу из БД и просто использовал ее для нашей карты-->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script>
        var myMap;
        function initMap() {
            myMap = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 53.0584, lng: 158.6321 }, //петропавловск-камчатский - центр карты
                zoom: 8
            });
        }

        $(document).ready(function () {
            GetData();
        });

        var markers = [];

        function GetData() {
            $.ajax({
                url: '/GoogleMap?handler=Hills',
                type: "GET",
                async: true,
                contentType: "application/json",
                data: "{}",
                dataType: "json",
                success: function (data) {
                    $.each(data, function (index, item) {
                        var marker = {};
                        markers = [{
                            coordinates: {
                                lat: (Number((marker["NL"] = item.nl) + "." + (marker["NLM"] = item.nlm))),
                                lng: (Number((marker["EL"] = item.el) + "." + (marker["ELM"] = item.elm)))
                            },
                            info: marker["name"] = item.name
                        }]
                        markers.push(marker);
                        for (var i = 0; i < markers.length; i++) {
                            addMarkers(markers[i]);
                        }
                    })
                }
            });

            //Функция для добавления маркеров
            function addMarkers(properties) {
                var marker = new google.maps.Marker({
                    position: properties.coordinates,
                    map: myMap //первый map - это параметр (вроде это <div id="map"></div> (см. выше)), который как бы принимает в качестве аргумента после двоеточия другой map, который уже явл. аргументом (картой), определенным выше
                });

                if (properties.image) { marker.setIcon(propertie.image) } //для иконок маркера

                if (properties.info) { //для информационных окошек
                    var InfoWindow = new google.maps.InfoWindow({
                        content: properties.info
                    })
                    marker.addListener('click', function () {
                        InfoWindow.open(map, marker);
                        setTimeout(function () { InfoWindow.close(); }, '1500');
                    })
                }
            }
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDjWgl09DfBHvTI1LTCuZBUSprB66z2SAQ&callback=initMap"
            async defer></script>
</body>
</html>
